name: Nightly API builds

on:
  push:
    branches: [ "main" ]
  
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        database: [mysql, mariadb]
    env:
        DATABASE: ${{ matrix.database }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Shutdown Ubuntu MySQL
      run: sudo service mysql stop
      if: matrix.database == 'mysql'
    
    - name: Set up MySQL
      uses: mirromutth/mysql-action@v1.1
      with:
        host port: 3306
        container port: 3306
        character set server: 'utf8'
        collation server: 'utf8_general_ci'
        mysql version: '8.0'
        mysql database: 'sphynx_api'
        mysql root password: 'root'
      if: matrix.database == 'mysql'
    
    - name: Set up MariaDB
      uses: getong/mariadb-action@v1.1
      with:
        host port: 3306
        container port: 3306
        character set server: 'utf8'
        collation server: 'utf8_general_ci'
        mariadb version: '10.4.10' 
        mysql database: 'sphynx_api'
        mysql root password: 'root'
      if: matrix.database == 'mariadb'
      
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Get Commit SHA
      run: echo "SHA=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"

    - name: Rename artifact
      run: mv target/sphynx-*.jar target/sphynx_${{ matrix.DATABASE }}-${{ env.SHA }}.jar
    
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v4
      with:
        name: Sphynx-${{ matrix.DATABASE }}-API
        path: target/sphynx_*.jar
        
  release-api:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/
        
    - name: List artifacts folder
      run: ls artifacts

    - name: Release nightly
      uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "nightly"
        prerelease: true
        title: "Builds de Desenvolvimento"
        files: artifacts/
